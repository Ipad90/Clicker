{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\orderbooks\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\orderbooks\\\\src\\\\components\\\\orderbook.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst OrderBook = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        orders = _useState2[0],\n        setOrders = _useState2[1];\n\n  const currencyPair = 'btcusd';\n  const currencyArray = currencyPair.toUpperCase().match(/.{1,3}/g);\n  useEffect(() => {\n    const subscribe = {\n      event: 'bts:subscribe',\n      data: {\n        channel: `order_book_${currencyPair}`\n      }\n    };\n    const ws = new WebSocket('wss://ws.bitstamp.net');\n\n    ws.onopen = () => {\n      ws.send(JSON.stringify(subscribe));\n    };\n\n    ws.onmessage = event => {\n      const response = JSON.parse(event.data);\n      setOrders(response.data);\n    };\n\n    ws.onclose = () => {\n      ws.close();\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [currencyPair]);\n  const bids = orders.bids,\n        asks = orders.asks;\n\n  const orderRows = arr => arr && arr.map((item, index) => React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" \", item[1], \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" \", item[0], \" \")));\n\n  const orderHead = title => React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, title)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Amount (\", currencyArray[0], \")\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Price (\", currencyArray[1], \")\")));\n\n  return React.createElement(\"div\", {\n    className: \"order-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, orderHead('Bids'), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, orderRows(bids))), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, orderHead('Asks'), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, orderRows(asks))));\n};\n\nexport default OrderBook;","map":{"version":3,"sources":["C:/xampp/htdocs/orderbooks/src/components/orderbook.js"],"names":["React","useState","useEffect","OrderBook","orders","setOrders","currencyPair","currencyArray","toUpperCase","match","subscribe","event","data","channel","ws","WebSocket","onopen","send","JSON","stringify","onmessage","response","parse","onclose","close","bids","asks","orderRows","arr","map","item","index","orderHead","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst OrderBook = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const currencyPair = 'btcusd';\r\n\r\n    const currencyArray = currencyPair.toUpperCase().match(/.{1,3}/g);\r\n\r\n    useEffect(() => {\r\n        const subscribe = {\r\n            event: 'bts:subscribe',\r\n            data: {\r\n                channel: `order_book_${currencyPair}`\r\n            }\r\n        };\r\n    const ws = new WebSocket('wss://ws.bitstamp.net');\r\n\r\n    ws.onopen = () => {\r\n      ws.send(JSON.stringify(subscribe));\r\n    };\r\n    ws.onmessage = (event) => {\r\n      const response = JSON.parse(event.data);\r\n      setOrders(response.data);\r\n    };\r\n    ws.onclose = () => {\r\n      ws.close();\r\n    };\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, [currencyPair]);\r\n\r\n  const { bids, asks } = orders;\r\n  const orderRows = (arr) =>\r\n    arr &&\r\n    arr.map((item, index) => (\r\n      <tr key={index}>\r\n        <td> {item[1]} </td>\r\n        <td> {item[0]} </td>\r\n      </tr>\r\n    ));\r\n  const orderHead = (title) => (\r\n    <thead>\r\n      <tr>\r\n        <th colSpan=\"2\">{title}</th>\r\n      </tr>\r\n      <tr>\r\n        <th>Amount ({currencyArray[0]})</th>\r\n        <th>Price ({currencyArray[1]})</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n  return (\r\n    <div className=\"order-container\">\r\n      <table>\r\n        {orderHead('Bids')}\r\n        <tbody>{orderRows(bids)}</tbody>\r\n      </table>\r\n\r\n      <table>\r\n        {orderHead('Asks')}\r\n        <tbody>{orderRows(asks)}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderBook;\r\n"]},"metadata":{},"sourceType":"module"}